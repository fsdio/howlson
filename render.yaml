services:
  - type: web
    name: howlson
    env: php
    plan: free
    buildCommand: |
      set -e
      echo "Installing PHP dependencies..."
      composer install --no-dev --optimize-autoloader --no-interaction
      echo "Installing Bun..."
      curl -fsSL https://bun.sh/install | bash
      export PATH="$HOME/.bun/bin:$PATH"
      echo "Installing Node dependencies..."
      bun install
      echo "Building frontend assets..."
      bun run build
      echo "Setting up storage directories..."
      mkdir -p storage/logs
      mkdir -p storage/framework/cache
      mkdir -p storage/framework/sessions
      mkdir -p storage/framework/views
      mkdir -p bootstrap/cache
      echo "Setting up database..."
      mkdir -p database
      touch database/database.sqlite
      chmod 664 database/database.sqlite
      chmod 775 database
      echo "Setting permissions..."
      chmod -R 775 storage
      chmod -R 775 bootstrap/cache
      echo "Build completed successfully!"
    startCommand: |
      set -e
      echo "Starting application..."
      
      # Check critical environment variables
      echo "Checking environment variables..."
      if [ -z "$APP_KEY" ]; then
        echo "ERROR: APP_KEY is not set!"
        exit 1
      fi
      if [ -z "$PORT" ]; then
        echo "ERROR: PORT is not set!"
        exit 1
      fi
      
      echo "Checking database file..."
      if [ ! -f "database/database.sqlite" ]; then
        echo "Creating database file..."
        mkdir -p database
        touch database/database.sqlite
        chmod 664 database/database.sqlite
        chmod 775 database
      fi
      
      echo "Testing database connection..."
      php -r "try { \$pdo = new PDO('sqlite:' . getcwd() . '/database/database.sqlite'); echo 'Database connection OK\n'; } catch(Exception \$e) { echo 'Database error: ' . \$e->getMessage() . '\n'; exit(1); }"
      
      echo "Running migrations..."
      php artisan migrate --force
      
      echo "Optimizing for production..."
      php artisan config:cache
      php artisan route:cache
      php artisan view:cache
      
      echo "Starting server on port $PORT..."
      php artisan serve --host=0.0.0.0 --port=$PORT
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_KEY
        generateValue: true
      - key: DB_CONNECTION
        value: sqlite
      - key: DB_DATABASE
        value: database/database.sqlite
      - key: SESSION_DRIVER
        value: database
      - key: CACHE_STORE
        value: database
      - key: QUEUE_CONNECTION
        value: database
      - key: LOG_CHANNEL
        value: errorlog
      - key: LOG_LEVEL
        value: error
      - key: SESSION_LIFETIME
        value: 120
      - key: SESSION_ENCRYPT
        value: false
      - key: BCRYPT_ROUNDS
        value: 12